{"remainingRequest":"D:\\222管理信息系统\\mis_project_02\\node_modules\\_vue-loader@15.9.7@vue-loader\\lib\\index.js??vue-loader-options!D:\\222管理信息系统\\mis_project_02\\src\\components\\index\\Bmap.vue?vue&type=style&index=0&id=63057e8e&scoped=true&lang=css&","dependencies":[{"path":"D:\\222管理信息系统\\mis_project_02\\src\\components\\index\\Bmap.vue","mtime":1624367882097},{"path":"D:\\222管理信息系统\\mis_project_02\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\222管理信息系统\\mis_project_02\\node_modules\\_vue-loader@15.9.7@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\222管理信息系统\\mis_project_02\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\222管理信息系统\\mis_project_02\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\222管理信息系统\\mis_project_02\\node_modules\\_vue-loader@15.9.7@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI21haW50ZXN0IHsKICAgIHdpZHRoOiA5MCU7IAogICAgaGVpZ2h0OiA2MDBweDsgCiAgICBib3JkZXI6IDFweCBzb2xpZCAjRUJFRUY1OwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBtYXJnaW4tYm90dG9tOiAzMHB4OwogICAgbWFyZ2luLXRvcDogNjBweDsKfQo="},{"version":3,"sources":["Bmap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Bmap.vue","sourceRoot":"src/components/index","sourcesContent":["<template>\r\n    <div id=\"maintest\" v-loading=\"loading\"></div>\r\n</template>\r\n\r\n<script>\r\nvar echarts = require('echarts')\r\nrequire('echarts/extension/bmap/bmap')\r\nimport router from '../../router/index'\r\n\r\nimport demo from '@/assets/data/map.json'\r\n\r\nfunction graph(level1,level2,level3,level4,level5) {\r\nvar myChart = echarts.init(document.getElementById('maintest'));\r\nvar option;\r\n\r\n// 示例数据\r\n// var data2 = [\r\n//     {name: '海门', value: [113,28.21,100]},\r\n//      {name: '鄂尔多斯', value: [115.480656,35.23375,120]},\r\n//      {name: '招远', value: [125.03,46.58,780], stock_code: '600433'}\r\n// ];\r\n\r\noption = {\r\n    tooltip : {\r\n        trigger: 'item',\r\n        formatter: function (params) {\r\n            return params.marker + params.seriesName\r\n            + '<br/>' + params.name\r\n        }\r\n    },\r\n    bmap: {\r\n        // center: [112.114129, 37.550339],\r\n        center: [78.114129, 12.550339],\r\n        // zoom: 5,\r\n        zoom: 1,\r\n        roam: true,\r\n        silent: true, // 不响应和触发鼠标事件，否则点击节点跳转至新页面时地图会聚焦到那个点\r\n        mapStyle: {\r\n            styleJson: [{\r\n                'featureType': 'railway',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'visibility': 'off'\r\n                }\r\n            }, {\r\n                'featureType': 'highway',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'color': '#fdfdfd'\r\n                }\r\n            }, {\r\n                'featureType': 'highway',\r\n                'elementType': 'labels',\r\n                'stylers': {\r\n                    'visibility': 'off'\r\n                }\r\n            }, {\r\n                'featureType': 'arterial',\r\n                'elementType': 'geometry',\r\n                'stylers': {\r\n                    'color': '#fefefe'\r\n                }\r\n            }, {\r\n                'featureType': 'arterial',\r\n                'elementType': 'geometry.fill',\r\n                'stylers': {\r\n                    'color': '#fefefe'\r\n                }\r\n            }, {\r\n                'featureType': 'poi',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'visibility': 'off'\r\n                }\r\n            }, {\r\n                'featureType': 'green',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'visibility': 'off'\r\n                }\r\n            }, {\r\n                'featureType': 'subway',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'visibility': 'off'\r\n                }\r\n            }, {\r\n                'featureType': 'manmade',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'color': '#d1d1d1'\r\n                }\r\n            }, {\r\n                'featureType': 'local',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'color': '#d1d1d1'\r\n                }\r\n            }, {\r\n                'featureType': 'arterial',\r\n                'elementType': 'labels',\r\n                'stylers': {\r\n                    'visibility': 'off'\r\n                }\r\n            }, {\r\n                'featureType': 'building',\r\n                'elementType': 'all',\r\n                'stylers': {\r\n                    'color': '#d1d1d1'\r\n                }\r\n            }, {\r\n                'featureType': 'label',\r\n                'elementType': 'labels.text.fill',\r\n                'stylers': {\r\n                    'color': '#999999'\r\n                }\r\n            }]\r\n        }\r\n    },\r\n    series : [\r\n        {\r\n            name: '城市Level1',\r\n            type: 'scatter',\r\n            coordinateSystem: 'bmap',\r\n            // data: json,\r\n            data: level1,\r\n            symbolSize: 8,\r\n            // symbolSize: function (val) {\r\n                // return val[2] * 20 + 20;\r\n            // },\r\n            encode: {\r\n                value: 2\r\n            },\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'top',\r\n                show: false\r\n            },\r\n            itemStyle: {\r\n                // color: '#ddb926'\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true\r\n                },\r\n                scale: true,\r\n            }\r\n        },\r\n        {\r\n            name: '城市Level2',\r\n            type: 'scatter',\r\n            coordinateSystem: 'bmap',\r\n            // data: json,\r\n            data: level2,\r\n            symbolSize: 10,\r\n            encode: {\r\n                value: 2\r\n            },\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'top',\r\n                show: false\r\n            },\r\n            itemStyle: {\r\n                // color: '#ddb926'\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true\r\n                },\r\n                scale: true,\r\n            }\r\n        },\r\n        {\r\n            name: '城市Level3',\r\n            type: 'scatter',\r\n            coordinateSystem: 'bmap',\r\n            // data: json,\r\n            data: level3,\r\n            symbolSize: 15,\r\n            encode: {\r\n                value: 2\r\n            },\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'top',\r\n                show: false\r\n            },\r\n            itemStyle: {\r\n                // color: '#ddb926'\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true\r\n                },\r\n                scale: true,\r\n            }\r\n        },\r\n        {\r\n            name: '城市Level4',\r\n            type: 'scatter',\r\n            coordinateSystem: 'bmap',\r\n            // data: json,\r\n            data: level4,\r\n            symbolSize: 20,\r\n            encode: {\r\n                value: 2\r\n            },\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'top',\r\n                show: false\r\n            },\r\n            itemStyle: {\r\n                // color: '#ddb926'\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true\r\n                },\r\n                scale: true,\r\n            }\r\n        },\r\n        {\r\n            name: '城市Level5',\r\n            type: 'scatter',\r\n            coordinateSystem: 'bmap',\r\n            // data: json,\r\n            data: level5,\r\n            symbolSize: 25,\r\n            encode: {\r\n                value: 2\r\n            },\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'top',\r\n                show: false\r\n            },\r\n            itemStyle: {\r\n                // color: '#ddb926'\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true\r\n                },\r\n                scale: true,\r\n            }\r\n        },\r\n        {\r\n            name: 'Top 5',\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'bmap',\r\n            data: level5.sort(function (a, b) {\r\n                return b.value[2] - a.value[2];\r\n            }).slice(0, 5),\r\n            symbolSize: 35,\r\n            // symbolSize: function (val) {\r\n            //     return val[2] * 15 + 40;\r\n            // },\r\n            encode: {\r\n                value: 2\r\n            },\r\n            showEffectOn: 'render',\r\n            rippleEffect: {\r\n                brushType: 'stroke'\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'right',\r\n                show: true\r\n            },\r\n            itemStyle: {\r\n                // color: '#18D070',\r\n                shadowBlur: 10,\r\n                shadowColor: '#333'\r\n                // shadowColor: '#18D070'\r\n            },\r\n            emphasis: {\r\n                scale: true,\r\n            },\r\n            zlevel: 1\r\n        }\r\n    ]\r\n};\r\n\r\nmyChart.setOption(option);\r\n\r\n// 为 echarts 图表添加点击事件\r\n    myChart.on('click', function(param) {\r\n        // console.log(param);\r\n        // console.log(param.data.name); //获取热词名称\r\n\r\n        // if(param.dataType == 'node') {\r\n            router.push({\r\n                path: \"/morenews\",\r\n                query: {\r\n                    keyword: param.data.name,\r\n                    type: '',\r\n                    page: 1,\r\n                    year: ''\r\n                }\r\n            })\r\n        // }\r\n        \r\n    });\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            list: [],\r\n            loading: true,\r\n            level1: [],\r\n            level2: [],\r\n            level3: [],\r\n            level4: [],\r\n            level5: [],\r\n        }\r\n    },\r\n    methods: {\r\n        graph,\r\n        async getData () {\r\n            // let {data} = await this.$get(\r\n            //     \"http://192.168.43.94:8290/getGraph\"\r\n            // )\r\n\r\n            // 本地测试\r\n            // let  {data}  = await this.$get(\"/data/multi.json\");\r\n            // console.log('地图数据',data)\r\n\r\n            let data = demo;\r\n\r\n            // 数据处理\r\n            let arr = [];\r\n            for(var i=0; i<data.geo.length; i++) {\r\n                let oneValue = [];\r\n                oneValue.push(data.geo[i].lng);\r\n                oneValue.push(data.geo[i].lat);\r\n                oneValue.push(0.2);\r\n                if(data.geo[i].level == 1)\r\n                    this.level1.push({\r\n                        name: data.geo[i].name,\r\n                        value: oneValue,\r\n                    })\r\n                if(data.geo[i].level == 2)\r\n                    this.level2.push({\r\n                        name: data.geo[i].name,\r\n                        value: oneValue,\r\n                    })\r\n                if(data.geo[i].level == 3)\r\n                    this.level3.push({\r\n                        name: data.geo[i].name,\r\n                        value: oneValue,\r\n                    })\r\n                if(data.geo[i].level == 4)\r\n                    this.level1.push({\r\n                        name: data.geo[i].name,\r\n                        value: oneValue,\r\n                    })\r\n                if(data.geo[i].level == 5)\r\n                    this.level5.push({\r\n                        name: data.geo[i].name,\r\n                        value: oneValue,\r\n                    })\r\n                arr.push({\r\n                    name: data.geo[i].name,\r\n                    value: oneValue,\r\n                });\r\n            }\r\n            this.list = arr;\r\n            \r\n            // console.log('地图>')\r\n            // console.log(arr)\r\n            setTimeout(() => {\r\n                this.graph(this.level1,this.level2,this.level3,this.level4,this.level5);\r\n                this.loading = false;\r\n            }, 1000);\r\n            \r\n        },\r\n        async getData2 () {\r\n            let res = await this.$http.get(\r\n                \"/getGraph\"\r\n            )\r\n            console.log('地图request',res);\r\n            let data = res.data;\r\n\r\n            // 析构\r\n            // let {data} = await this.$http.get(\r\n            //     \"getGraph\"\r\n            // )\r\n            // console.log('xx',data);\r\n            // let data = res;\r\n\r\n\r\n            // 本地测试\r\n            // let  {data}  = await this.$get(\"/data/multi.json\");\r\n            // console.log(data)\r\n\r\n            // 数据处理\r\n            let arr = [];\r\n            for(var i=0; i<data.geo.length; i++) {\r\n                let oneValue = [];\r\n                oneValue.push(data.geo[i].lng);\r\n                oneValue.push(data.geo[i].lat);\r\n                oneValue.push(0.2);\r\n                arr.push({\r\n                    name: data.geo[i].name,\r\n                    value: oneValue,\r\n                });\r\n            }\r\n            this.list = arr;\r\n            \r\n            // console.log('地图>')\r\n            // console.log(arr)\r\n            setTimeout(() => {\r\n                this.graph(this.list);\r\n                this.loading = false;\r\n            }, 1000);\r\n            \r\n        },\r\n    },\r\n    mounted () {\r\n        this.getData();\r\n        // this.getData2();\r\n    },\r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    #maintest {\r\n        width: 90%; \r\n        height: 600px; \r\n        border: 1px solid #EBEEF5;\r\n        margin: 0 auto;\r\n        margin-bottom: 30px;\r\n        margin-top: 60px;\r\n    }\r\n</style>\r\n\r\n<style type=\"text/css\">\r\n    .anchorBL{\r\n        display:none\r\n    }\r\n</style>"]}]}