<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.learning.mapper.UserMapper">

	<!-- 增 [G] -->
	<insert id="add">
		insert into 
		`user` (userId, `name`, secureQue, secureAns, mail, org, score)
		values (#{userId}, #{name}, #{secureQue}, #{secureAns}, #{mail}, #{org}, #{score}) 
	</insert>

	<!-- 删 -->
	<delete id="delete">
		delete from `user`
		where userId = #{userId}
	</delete>

	<!-- 改 [G] -->
	<update id="update">
		update `user` set
		userId = #{userId}, 
		`name` = #{name},
		secureQue = #{secureQue}, 
		secureAns = #{secureAns}, 
		mail = #{mail}, 
		org = #{org}, 
		score = #{score}
		where userId = #{userId}
	</update>


	<!-- ================================== 查询相关 ================================== -->
	<!-- select userId, name, secureQue, secureAns, mail, org, score from user  -->
	
	<!-- 通用映射：手动模式 -->
	<resultMap id="model" type="com.learning.learning.entity.User">
		<result property="userId" column="userId" />
		<result property="name" column="name" />
		<result property="secureQue" column="secureQue" />
		<result property="secureAns" column="secureAns" />
		<result property="mail" column="mail" />
		<result property="org" column="org" />
		<result property="score" column="score" />
	</resultMap>
	
	<!-- 公共查询sql片段 -->
	<sql id="select_sql">
		select userId, `name`, secureQue, secureAns, mail, org, score
		from `user`
	</sql>
	
	<!-- 查 - 根据id -->
	<select id="getUserInfoById" resultMap="model">
		<include refid="select_sql"></include>
		where userId = #{userId}
	</select>
	
	<!-- 查集合 - 根据条件（参数为空时代表忽略指定条件） [G] -->
<!--	<select id="getList" resultMap="model">-->
<!--		<include refid="select_sql"></include>-->
<!--		<where>-->
<!--			<if test=' this.has("userId") '> and userId = #{userId} </if>-->
<!--			<if test=' this.has("name") '> and name = #{name} </if>-->
<!--			<if test=' this.has("secureQue") '> and secureQue = #{secureQue} </if>-->
<!--			<if test=' this.has("secureAns") '> and secureAns = #{secureAns} </if>-->
<!--			<if test=' this.has("mail") '> and mail = #{mail} </if>-->
<!--			<if test=' this.has("org") '> and org = #{org} </if>-->
<!--			<if test=' this.has("score") '> and score = #{score} </if>-->
<!--		</where>-->
<!--		order by-->
<!--		<choose>-->
<!--			<when test='sortType == 1'> userId desc </when>-->
<!--			<when test='sortType == 2'> name desc </when>-->
<!--			<when test='sortType == 3'> secureQue desc </when>-->
<!--			<when test='sortType == 4'> secureAns desc </when>-->
<!--			<when test='sortType == 5'> mail desc </when>-->
<!--			<when test='sortType == 6'> org desc </when>-->
<!--			<when test='sortType == 7'> score desc </when>-->
<!--			<otherwise> userId desc </otherwise>-->
<!--		</choose>-->
<!--	</select>-->
</mapper>
